[{"C:\\Users\\Shark\\Documents\\embrace-it\\helloworld-react-ts\\src\\App.tsx":"1","C:\\Users\\Shark\\Documents\\embrace-it\\helloworld-react-ts\\src\\elements\\Header.tsx":"2","C:\\Users\\Shark\\Documents\\embrace-it\\helloworld-react-ts\\src\\components\\Home.tsx":"3","C:\\Users\\Shark\\Documents\\embrace-it\\helloworld-react-ts\\src\\components\\Editor.tsx":"4","C:\\Users\\Shark\\Documents\\embrace-it\\helloworld-react-ts\\src\\elements\\Form.tsx":"5","C:\\Users\\Shark\\Documents\\embrace-it\\helloworld-react-ts\\src\\elements\\Table.tsx":"6","C:\\Users\\Shark\\Documents\\embrace-it\\helloworld-react-ts\\src\\hooks\\useInput.tsx":"7","C:\\Users\\Shark\\Documents\\embrace-it\\helloworld-react-ts\\src\\hooks\\useRadioInput.tsx":"8","C:\\Users\\Shark\\Documents\\embrace-it\\helloworld-react-ts\\src\\elements\\Container.tsx":"9","C:\\Users\\Shark\\Documents\\embrace-it\\helloworld-react-ts\\src\\utils.tsx":"10","C:\\Users\\Shark\\Documents\\embrace-it\\helloworld-react-ts\\src\\index.tsx":"11","C:\\Users\\Shark\\Documents\\embrace-it\\helloworld-react-ts\\src\\reportWebVitals.ts":"12","C:\\Users\\Shark\\Documents\\embrace-it\\helloworld-react-ts\\src\\components\\AddPerson.tsx":"13","C:\\Users\\Shark\\Documents\\embrace-it\\helloworld-react-ts\\src\\components\\EditPerson.tsx":"14","C:\\Users\\Shark\\Documents\\embrace-it\\helloworld-react-ts\\src\\components\\UserInfoForm.tsx":"15"},{"size":1718,"mtime":1606217730690,"results":"16","hashOfConfig":"17"},{"size":106,"mtime":1606201108451,"results":"18","hashOfConfig":"17"},{"size":2326,"mtime":1606217774567,"results":"19","hashOfConfig":"17"},{"size":4201,"mtime":1606214305495,"results":"20","hashOfConfig":"17"},{"size":1447,"mtime":1606217924863,"results":"21","hashOfConfig":"17"},{"size":1287,"mtime":1606212920744,"results":"22","hashOfConfig":"17"},{"size":389,"mtime":1606213455544,"results":"23","hashOfConfig":"17"},{"size":438,"mtime":1606208963818,"results":"24","hashOfConfig":"17"},{"size":716,"mtime":1606216938226,"results":"25","hashOfConfig":"17"},{"size":175,"mtime":1606213788144,"results":"26","hashOfConfig":"17"},{"size":500,"mtime":499162500000,"results":"27","hashOfConfig":"17"},{"size":425,"mtime":499162500000,"results":"28","hashOfConfig":"17"},{"size":870,"mtime":1606216174952,"results":"29","hashOfConfig":"17"},{"size":1554,"mtime":1606217768823,"results":"30","hashOfConfig":"17"},{"size":3482,"mtime":1606217780281,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1vjvury",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Shark\\Documents\\embrace-it\\helloworld-react-ts\\src\\App.tsx",["66"],"C:\\Users\\Shark\\Documents\\embrace-it\\helloworld-react-ts\\src\\elements\\Header.tsx",[],"C:\\Users\\Shark\\Documents\\embrace-it\\helloworld-react-ts\\src\\components\\Home.tsx",[],"C:\\Users\\Shark\\Documents\\embrace-it\\helloworld-react-ts\\src\\components\\Editor.tsx",["67"],"import { useNavigate, useParams } from '@reach/router';\r\nimport React, { useContext, useMemo } from 'react';\r\nimport { PeopleContext } from '../App';\r\nimport { Container, NavigationButton, Plate } from '../elements/Container';\r\nimport { Form } from '../elements/Form';\r\nimport useInput from '../hooks/useInput';\r\nimport useRadioInput from '../hooks/useRadioInput';\r\nconst Editor = () => {\r\n    const navigate = useNavigate()\r\n    const { addPerson, people, updatePerson } = useContext(PeopleContext);\r\n\r\n    const params = useParams()\r\n    let [userInfo, userFound] = useMemo(() => {\r\n        let _info = {\r\n            name: \"\",\r\n            email: \"\",\r\n            phone: \"\",\r\n            country: \"\",\r\n            gender: \"\"\r\n        }\r\n\r\n        let _userFound = false\r\n        if (params.userId) {\r\n            //getting the actual user\r\n            const { userId } = params\r\n            console.log(userId, people)\r\n            if (userId > 0 && userId - 1 < people.length) {\r\n                _info = { ...people[userId - 1] }\r\n                _userFound = true\r\n            }\r\n        }\r\n        return [_info, _userFound]\r\n    }, [params])\r\n\r\n    const { state: name, bindings: nameBindings } = useInput(userInfo.name)\r\n    const { state: email, bindings: emailBindings } = useInput(userInfo.email)\r\n    const { state: phone, bindings: phoneBindings } = useInput(userInfo.phone)\r\n    const { state: country, bindings: countryBindings } = useInput(userInfo.country)\r\n    const { selected: gender, bindings: genderBindings } = useRadioInput([\"Male\", \"Female\"], userInfo.gender)\r\n\r\n    const handleFormSubmission = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        if (!userFound)\r\n            addPerson({\r\n                name, email, phone, country, gender\r\n            })\r\n        else\r\n            updatePerson(params.userId, {\r\n                name, email, phone, country, gender\r\n            })\r\n        navigate(\"/\")\r\n    }\r\n    const gotoHome = () => {\r\n        navigate(\"/\")\r\n    }\r\n    const countries = [\"Pakistan\", \"Saudia Arabia\", \"England\", \"USA\"]\r\n    return (\r\n        <Container>\r\n            <Form onSubmit={handleFormSubmission}>\r\n                <Plate>\r\n                    <span></span>\r\n                    <NavigationButton onClick={gotoHome}>Go Back</NavigationButton>\r\n                </Plate>\r\n                {\r\n                    params.userId && !userFound && <b>User not found!</b>\r\n                }\r\n                <h1>{userFound ? \"Edit Person's Information\" : \"Add new user\"}</h1>\r\n                <label>Name:</label>\r\n                <input type='text' required {...nameBindings} pattern=\"[A-Za-z]{3,15} [A-Za-z]{3,15}\" placeholder=\"Enter your full name\" />\r\n                <label>Email</label>\r\n                <input type='email' required {...emailBindings} placeholder=\"E.g. example@website.com\" />\r\n                <label>Phone</label>\r\n                <input type='tel' required {...phoneBindings} placeholder=\"03081234567\" />\r\n                <label>Gender:</label>\r\n                <div className=\"genderPicker\">\r\n                    <label htmlFor=\"genderMale\">Male</label>\r\n                    <input id=\"genderMale\" type='radio' name='gender' checked={\"Male\" === gender} value=\"Male\" required {...genderBindings} />\r\n                    <label htmlFor=\"genderFemale\">Female</label>\r\n                    <input id=\"genderFemale\" type='radio' name='gender' checked={\"Female\" === gender} value=\"Female\" required {...genderBindings} />\r\n                </div>\r\n                <label>Country</label>\r\n                <select required  {...countryBindings}>\r\n                    <option disabled value=\"\">Please select a country</option>\r\n                    {\r\n                        countries.map((_country, _index) => <option value={_country} key={_index}>{_country}</option>)\r\n                    }\r\n                </select>\r\n                <div className=\"buttonsWrapper\">\r\n                    {userFound ? <button type=\"submit\">Update Person's Information</button> : <button type=\"submit\">Add Person</button>}\r\n                </div>\r\n            </Form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Editor",["68","69"],"C:\\Users\\Shark\\Documents\\embrace-it\\helloworld-react-ts\\src\\elements\\Form.tsx",[],"C:\\Users\\Shark\\Documents\\embrace-it\\helloworld-react-ts\\src\\elements\\Table.tsx",[],"C:\\Users\\Shark\\Documents\\embrace-it\\helloworld-react-ts\\src\\hooks\\useInput.tsx",["70","71","72"],"import { stat } from \"fs\"\r\nimport { ChangeEvent, SelectHTMLAttributes, useState } from \"react\"\r\n\r\nconst useInput = (initialState: string) => {\r\n    const [state, setState] = useState(initialState)\r\n    const bindings = {\r\n        value: state,\r\n        onChange(e: any) {\r\n            setState(e.target.value)\r\n        }\r\n    }\r\n\r\n    return {state, bindings}\r\n}\r\n\r\nexport default useInput","C:\\Users\\Shark\\Documents\\embrace-it\\helloworld-react-ts\\src\\hooks\\useRadioInput.tsx",["73"],"import { stat } from \"fs\"\r\nimport { ChangeEvent, useState } from \"react\"\r\n\r\nconst useRadioInput = (values: string[], initial: string) => {\r\n    const [selected, setSelected] = useState(initial)\r\n    const bindings = {\r\n        onChange(e: ChangeEvent<HTMLInputElement>) {\r\n            if(e.target.checked)\r\n                setSelected(e.target.value)\r\n        }\r\n    }\r\n\r\n    return {selected, bindings}\r\n}\r\n\r\nexport default useRadioInput","C:\\Users\\Shark\\Documents\\embrace-it\\helloworld-react-ts\\src\\elements\\Container.tsx",[],"C:\\Users\\Shark\\Documents\\embrace-it\\helloworld-react-ts\\src\\utils.tsx",[],"C:\\Users\\Shark\\Documents\\embrace-it\\helloworld-react-ts\\src\\index.tsx",[],"C:\\Users\\Shark\\Documents\\embrace-it\\helloworld-react-ts\\src\\reportWebVitals.ts",[],"C:\\Users\\Shark\\Documents\\embrace-it\\helloworld-react-ts\\src\\components\\AddPerson.tsx",["74"],"C:\\Users\\Shark\\Documents\\embrace-it\\helloworld-react-ts\\src\\components\\EditPerson.tsx",[],"C:\\Users\\Shark\\Documents\\embrace-it\\helloworld-react-ts\\src\\components\\UserInfoForm.tsx",["75","76"],{"ruleId":"77","severity":1,"message":"78","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":14},{"ruleId":"81","severity":1,"message":"82","line":33,"column":8,"nodeType":"83","endLine":33,"endColumn":16,"suggestions":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"77","severity":1,"message":"89","line":1,"column":10,"nodeType":"79","messageId":"80","endLine":1,"endColumn":14},{"ruleId":"77","severity":1,"message":"90","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":21},{"ruleId":"77","severity":1,"message":"91","line":2,"column":23,"nodeType":"79","messageId":"80","endLine":2,"endColumn":43},{"ruleId":"77","severity":1,"message":"89","line":1,"column":10,"nodeType":"79","messageId":"80","endLine":1,"endColumn":14},{"ruleId":"77","severity":1,"message":"92","line":1,"column":23,"nodeType":"79","messageId":"80","endLine":1,"endColumn":32},{"ruleId":"77","severity":1,"message":"93","line":1,"column":10,"nodeType":"79","messageId":"80","endLine":1,"endColumn":18},{"ruleId":"94","severity":1,"message":"95","line":36,"column":29,"nodeType":"96","messageId":"97","endLine":36,"endColumn":31},"@typescript-eslint/no-unused-vars","'Editor' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'people'. Either include it or remove the dependency array.","ArrayExpression",["98"],"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"'stat' is defined but never used.","'ChangeEvent' is defined but never used.","'SelectHTMLAttributes' is defined but never used.","'useParams' is defined but never used.","'navigate' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"101","fix":"102"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [params, people]",{"range":"103","text":"104"},[1139,1147],"[params, people]"]